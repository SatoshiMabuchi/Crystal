#version 150
in vec3 position;
in vec3 normal;
out vec3 reflectDir;
out vec3 refractDir;
uniform vec3 eyePosition;
uniform mat4 modelviewMatrix;
uniform mat4 projectionMatrix;
//<< uniform float refractFactor;
void main(void) {
	vec3 worldPosition = vec3(modelviewMatrix * vec4(position,1.0));
	vec3 worldNormal = vec3(modelviewMatrix * vec4(normal,0.0));
	vec3 worldView = normalize( eyePosition - worldPosition );
	reflectDir = reflect(-worldView, worldNormal);
	refractDir = refract(-worldView, worldNormal, 1.33);
	gl_Position = projectionMatrix * modelviewMatrix * vec4(position, 1.0);
}